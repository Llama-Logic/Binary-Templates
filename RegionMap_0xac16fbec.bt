//--------------------------------------
// The Sims 4
// Copyright 2014 Electronic Arts Inc. All rights reserved.
//
//--- 010 Editor v5.0.2 Binary Template
// Resource Type: Binary template for CASPartRegionMap resource (type 0xac16fbec) version 1
//--------------------------------------

//
// ResourceKey
//
typedef struct
{
    UINT64 instance <format=hex>;
    UINT32 type <format=hex>;
    UINT32 group <format=hex>;
} ResourceKey <read=ReadResourceKey>;

string ReadResourceKey(ResourceKey& key)
{
    string s;
    SPrintf(s, "%08x:%08x:%016Lx", key.type, key.group, key.instance);
    return s;
}

//
//  Context Data
//
typedef struct
{
    UINT32 position <format=hex>;
    UINT32 length;
} ObjectData;

typedef struct
{
    UINT32 mContextversion;

    if(mContextversion != 3)
    {
        Warning("Context data version 3 expected.");
        return -1;
    }

    UINT32 mPublicKeyCount;
    UINT32 mExternalKeyCount;
    UINT32 mDelayLoadKeyCount;
    UINT32 mObjectCount;
    
    if(mPublicKeyCount > 0)
    {
        ResourceKey mPublicObject[mPublicKeyCount];
    }
    if(mObjectCount-mPublicKeyCount > 0)
    {
        ResourceKey mPrivateObject[mObjectCount-mPublicKeyCount];
    }
    if(mExternalKeyCount > 0)
    {
        ResourceKey mExternalReferences[mExternalKeyCount];
    }
    if(mDelayLoadKeyCount > 0)
    {
        ResourceKey mDelayLoadReferences[mDelayLoadKeyCount];
    }
    if(mObjectCount > 0)
    {
        ObjectData mObjectData[mObjectCount];
    }
} ContextData;

ContextData mContextData;

// Casparts have regions (represented by separate pieces of geometry) allowing them 
// to be switched on and off when different assets are paired, e.g. hide parts of pants 
// that are covered by shoes. The enum defines all the regions where such swap of
// geometries is possible.
enum CASPartRegion
{
   // "Base" sub-part by definition does not compete with any other subparts of other 
   // parts and is always shown.
    CASPARTREGION_BASE = 0, 

    CASPARTREGION_ANKLE,
    CASPARTREGION_CALF,
    CASPARTREGION_KNEE,
    CASPARTREGION_HANDL,
    CASPARTREGION_WRISTL,  // left versions of hand-arm specific regions 
    CASPARTREGION_BICEPL,
    CASPARTREGION_BELTLOW,
    CASPARTREGION_BELTHIGH,
    CASPARTREGION_HAIRHATA,
    CASPARTREGION_HAIRHATB,
    CASPARTREGION_HAIRHATC,
    CASPARTREGION_HAIRHATD,
    CASPARTREGION_NECK,
    CASPARTREGION_CHEST,
    CASPARTREGION_STOMACH,
    CASPARTREGION_HANDR,   // right versions of hand-arm specific regions
    CASPARTREGION_WRISTR,
    CASPARTREGION_BICEPR,
    CASPARTREGION_NECKLACESHADOW, // controls hiding dropshadow for necklaces
    CASPARTREGION_MAX
};

//
//  CASPartRegionMap Data
//
UINT32 version;
if(version != 1)
{
    Warning("Unknown version. Please update the template.");
    return -1;
}

//
typedef struct
{
    CASPartRegion region;
    FLOAT layer;            // sort layer for the geometries
    UCHAR isReplacement;    // true if the keys above represent replacement geometry
    UINT32 numKeys;
    if (numKeys>0)
    {
        ResourceKey keys[numKeys];
    }
} AssetPairingInfo <optimize=false>;

UINT32 numEntries;
AssetPairingInfo mAssetPairingInfo[numEntries];
